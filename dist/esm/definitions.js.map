{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface MLKitBarcodeScannerPlugin {\n  /**\n   * Opens a camera preview for barcode scanning and automatically detects barcodes in the scan area.\n   * In case of unsuccessful scan the reason is thrown as an error.\n   * <br>\n   * <b>Possible errors:</b>\n   * <ul>\n   *   <li>CANCELED</li>\n   *   <li>NO_CAMERA</li>\n   *   <li>NO_CAMERA_PERMISSION</li>\n   *   <li>JSON_EXCEPTION</li>\n   *   <li>PLATFORM_NOT_SUPPORTED</li>\n   * </ul>\n   * @param settings{ISettings} settings to be used for the scan\n   */\n  scan(settings: ISettings): Promise<IResult>;\n}\n\n/**\n * Options to make it possible to narrow down the barcode types scanned.\n */\nexport interface IBarcodeFormats {\n  Aztec: boolean;\n  CodaBar: boolean;\n  Code39: boolean;\n  Code93: boolean;\n  Code128: boolean;\n  DataMatrix: boolean;\n  EAN8: boolean;\n  EAN13: boolean;\n  ITF: boolean;\n  PDF417: boolean;\n  QRCode: boolean;\n  UPCA: boolean;\n  UPCE: boolean;\n}\n\n/**\n * All settings that can be passed to the plugin. The `detectorSize` value must be between\n * `0` and `1`, because it determines how many percent of the screen should be covered by\n * the detector.\n * If the value is greater than 1 the detector will not be visible on the screen.\n */\nexport interface ISettings {\n  barcodeFormats?: IBarcodeFormats;\n  beepOnSuccess?: boolean;\n  vibrateOnSuccess?: boolean;\n  detectorSize?: number;\n  detectorAspectRatio?: string;\n  drawFocusRect?: boolean;\n  focusRectColor?: string;\n  focusRectBorderRadius?: number;\n  focusRectBorderThickness?: number;\n  drawFocusLine?: boolean;\n  focusLineColor?: string;\n  focusLineThickness?: number;\n  drawFocusBackground?: boolean;\n  focusBackgroundColor?: string;\n  stableThreshold?: number;\n  debugOverlay?: boolean;\n}\n\n/**\n * The result of the plugin is an object with a list of detected barcodes, sorted by\n * distanceToCenter with the lowest value being first. DistanceToCenter is calculated by how\n * far away the center of the barcode is from the center of the scan area.\n */\nexport interface IResult {\n  barcodes: [{\n    value: string;\n    format: string;\n    type: string;\n    distanceToCenter: number;\n  }]\n}\n"]}